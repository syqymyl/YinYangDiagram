{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","n","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX,EAA4C;AAC5C,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;;AAEA,IAAIE,84CAAJ;;AA+CA;;AAEA,IAAIC,UAAU,EAAd,EAAkB;AAClB;AACA,IAAIC,IAAI,CAAR,EAAW;;AAEX;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACfC,aAAW,YAAM;AACf;AACA,QAAIJ,OAAOE,CAAP,MAAc,IAAlB,EAAwB;AACtB;AACAD,iBAAW,MAAX,CAFsB,CAEH;AACpB,KAHD,MAGO,IAAID,OAAOE,CAAP,MAAc,GAAlB,EAAuB;AAC5B;AACAD,iBAAW,QAAX,CAF4B,CAEP;AACtB,KAHM,MAGA;AACL;AACAA,iBAAWD,OAAOE,CAAP,CAAX;AACD;AACD;AACAN,SAAKS,SAAL,GAAiBJ,OAAjB;AACAF,UAAMM,SAAN,GAAkBL,OAAOM,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB,CAde,CAc2B;AAC1CK,WAAOC,QAAP,CAAgB,CAAhB,EAAmB,IAAnB;AACAZ,SAAKY,QAAL,CAAc,CAAd,EAAiB,IAAjB,EAhBe,CAgBS;AACxB,QAAIN,IAAIF,OAAOS,MAAP,GAAgB,CAAxB,EAA2B;AACzB;AACAP,WAAK,CAAL,CAFyB,CAEjB;AACRC;AACD;AACF,GAtBD,EAsBG,CAtBH;AAuBD,CAxBD;;AA0BAA;AACA","file":"main.abbc570d.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\"); //通过css选择器找到这个元素\r\nlet style = document.querySelector(\"#style\");\r\n\r\nlet string = `/* 你好，我是一名前端新人\r\n * 接下来我要展示一下我的前端功底\r\n * 首先我要准备一个div\r\n **/\r\n#div1{\r\n  border: 1px solid green;  \r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n/* 接下来我把div变成一个八卦图\r\n * 注意看好了\r\n * 首先，把div变成一个圆\r\n **/\r\n#div1{\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);\r\n  border: none;\r\n}\r\n/* 八卦是阴阳形成的\r\n * 一黑一白\r\n **/\r\n#div1{\r\n  background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的小球 */\r\n#div1::before{\r\n  width: 100px;\r\n  height: 100px;\r\n  left: 50%;\r\n  top: 0;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  border-radius: 50%;\r\n  background: radial-gradient(circle, rgba(0,0,0,1) 25%, rgba(247,247,247,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n#div1::after{\r\n  width: 100px;\r\n  height: 100px;\r\n  left: 50%;\r\n  bottom: 0;\r\n  transform: translateX(-50%);\r\n  background: #000;\r\n  border-radius: 50%;\r\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(235,235,235,1) 25%, rgba(0,0,0,1) 25%);\r\n}\r\n`;\r\n\r\n// string = string.replace(/\\n/g, \"<br>\"); //取代所有回车\r\n\r\nlet string2 = \"\"; //用于存储字符\r\n//在控制台使用string[0].charCodeAt()可以得出其的Unicode编码\r\nlet n = 0; //将其作为数组的下标\r\n\r\n// demo.innerHTML = string.substring(0, n);\r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    // console.log(n); //用于调试\r\n    if (string[n] === \"\\n\") {\r\n      //如果是回车,就照搬;\r\n      string2 += \"<br>\"; //在html回车要表示为<br>\r\n    } else if (string[n] === \" \") {\r\n      //如果是空格\r\n      string2 += \"&nbsp;\"; //在html空格要表示为&nbsp\r\n    } else {\r\n      //否则不照搬\r\n      string2 += string[n];\r\n    }\r\n    // html.innerHTML = string.substring(0, n); //string[11]超过字符串长度,改为判断n + 1\r\n    html.innerHTML = string2;\r\n    style.innerHTML = string.substring(0, n); //除掉转换成<br>和&nbsp;\r\n    window.scrollTo(0, 9999);\r\n    html.scrollTo(0, 9999); //配合overflow让代码滚动\r\n    if (n < string.length - 1) {\r\n      //如果不是最后一个，就继续\r\n      n += 1; //n = 55时时最后一字符,但+1后又变成了56,进入step\r\n      step();\r\n    }\r\n  }, 0);\r\n};\r\n\r\nstep();\r\n// step(); //两个setTimeout都是在1s后执行，看不到变化过程\r\n"]}